defineNotResizableNodes();
useDynamicTemplates('/ServiceProcess/templates/');
useCustomizedParser();
addPlugin('es.uca.modeling.figures');
addPlugin('es.uca.modeling.serviceprocess.edit');

-- MAIN BODY OPERATIONS -------------------------------------------------------

operation defineNotResizableNodes() {
  for (name in Sequence {'InitialNode', 'FinalNode', 'ForkNode',
                         'JoinNode', 'DecisionNode'}) {
    makeNotResizable(name + 'Figure');
  }
}

operation useDynamicTemplates(templateDir : String) {
  var genEditorGen := GmfGen!GenEditorGenerator.all.first();
  genEditorGen.dynamicTemplates := true;
  genEditorGen.templateDirectory := templateDir;
}

-- Use a customized parser for the Double attributes
operation useCustomizedParser() {
  var OLD_DOUBLE_PARSER_NAME := 'MessageFormatMessageFormatParser';
  var NEW_DOUBLE_PARSER_NAME := 'NumbersToDoubleParser';
  var doubleParser := findPredefinedParser(OLD_DOUBLE_PARSER_NAME);
  if (not doubleParser.isDefined()) {
    doubleParser := findPredefinedParser(NEW_DOUBLE_PARSER_NAME);
    assert(doubleParser.isDefined(),
           'If the Double parser does not exist with the old name, it must exist with the new name');
  }
  doubleParser.className := NEW_DOUBLE_PARSER_NAME;
}

operation addPlugin(pluginName : String) {
  var genPlugin := GmfGen!GenPlugin.all.first();
  genPlugin.requiredPlugins.add(pluginName);
}

-- UTILITY OPERATIONS ---------------------------------------------------------

operation findPredefinedParser(parserName : String) : GmfGen!PredefinedParser {
  return GmfGen!PredefinedParser.all.selectOne(r|r.className=parserName);
}

operation makeNotResizable(figureClass : String) {
  var figure_viewmaps = GmfGen!InnerClassViewmap.all
    .select(r|r.className = figureClass);
  
  for (figure_viewmap in figure_viewmaps) {
    -- Check whether the constraint was already added
    if (figure_viewmap
        .attributes
        .exists(r : GmfGen!ResizeConstraints | r.nonResizeHandles = 31)) {
      continue;
    }

    -- Resize constraint which forbids resizing
    -- NORTH (1), SOUTH (4), EAST (8) and WEST (16): all handles are not resizable
    var resizeconstraint_not_resizable = new GmfGen!ResizeConstraints;
    resizeconstraint_not_resizable.nonResizeHandles := 31;

    figure_viewmap.attributes.add(resizeconstraint_not_resizable);
  }
}
