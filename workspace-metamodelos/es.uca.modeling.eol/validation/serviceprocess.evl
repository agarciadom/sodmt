-- Diagram constraints --------------------------

import 'common.evl';

context ServiceProcess {
  constraint ExactlyOneProcessStart {
    check : ProcessStart.all.size() = 1
    message : 'There must be exactly one initial node for the whole service process'
  }

  constraint ProcessPerformanceMustBeDefined {
    check : self.processPerformance.isDefined()
    message : 'The performance constraints for the process must be defined'
    fix {
      title : 'Create a default global performance constraint'
      do {
        self.processPerformance := new ProcessPerformanceAnnotation;
      }
    }
  }

  constraint MinimumOneFinalNode {
    check : not FinalNode.all.isEmpty()
    message : 'There must be at least one final node'
  }
}

context ProcessPerformanceAnnotation {
  constraint ExactlyOnePerformanceAnnotation {
    check : ProcessPerformanceAnnotation.all.size() = 1
    message : 'There must be exactly one performance annotation for the whole service process'
    fix {
      title : 'Remove this performance annotation'
      do {
        delete self;
      }
    }
  }
}

--- OPERATIONS REQUIRED BY THE SHARED EVL CODE

operation ProcessFlowNode newActivity() {
  var newElement := new ServiceActivity;
  self.addSibling(newElement);
  return newElement;
}

operation ProcessFlowNode newForkNode() {
  var newElement := new ProcessFork;
  self.addSibling(newElement);
  return newElement;
}

operation ProcessFlowNode newJoinNode() {
  var newElement := new ProcessJoin;
  self.addSibling(newElement);
  return newElement;
}

operation ProcessFlowNode newDecisionNode() {
  var newElement := new ProcessDecision;
  self.addSibling(newElement);
  return newElement;
}

operation ProcessFlowNode addSibling(node : ProcessFlowNode) {
  ServiceProcess.all.first().nodes.add(node);
}

operation addEdge(e : ProcessFlowEdge) {
  ServiceProcess.all.first().edges.add(e);
}
