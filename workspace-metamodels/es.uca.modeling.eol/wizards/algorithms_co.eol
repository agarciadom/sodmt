-*
  Main file for the inference algorithms, to be imported from the
  ServiceComposition wizards.

  Copyright (c) 2010-2012 Antonio García Domínguez.  All rights
  reserved. This program and the accompanying materials are made
  available under the terms of the Eclipse Public License v1.0 which
  accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html

  Contributors:
     Antonio García Domínguez - initial API and implementation

  This file only defines the parts of the inference algorithm that
  are specific to the ServiceComposition metamodel.
*-

import 'concurrent_users.eol';
import 'time_limits_new.eol';
import 'time_limits.eol';

operation ActivityAction createPerformanceAnnotation() {
  self.annotation := new ActionPerformanceAnnotation;
  self.annotation.manuallyAdded := false;
  self.annotation.minimumTime := 0.0d;
  self.annotation.weight := 1.0d;
  self.annotation.concurrentUsers := 10;
  self.activity.nodes.add(self.annotation);
}

operation ActivityStart getGlobalTimeLimit() {
  return self.activity.secsTimeLimit;
}

@cached
operation ActivityStart getConcurrentUsers() : Real {
  return self.activity.annotation.concurrentUsers;
}
