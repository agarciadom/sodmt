import 'time_limits.eol';
import 'concurrent_users.eol';

wizard InferPerformanceAnnotations {
  title : 'Infer performance annotations'
  do {
    transaction {
      for (start in ActivityStart.all) {
        if (not annotateTimeLimits(start.getGlobalTimeLimit(), start)
            or not annotateConcurrentUsers(start)) {
          abort;
          return;
        }
      }
    } -- transaction
  }
}

wizard RemoveAllInferredAnnotations {
  title : 'Remove all inferred annotations'
  do {
    for (constraint in ActionPerformanceAnnotation.all.select(r|not r.manuallyAdded)) {
      delete constraint;
    }
  }
}

operation ActivityAction createPerformanceAnnotation() {
  self.annotation := new ActionPerformanceAnnotation;
  self.annotation.manuallyAdded := false;
  self.activity.nodes.add(self.annotation);
}

operation ActivityStart getGlobalTimeLimit() {
  return self.activity.annotation.secsTimeLimit;
}

@cached
operation ActivityStart getConcurrentUsers() : Real {
  return self.activity.annotation.concurrentUsers;
}
