import 'time_limits_co.eol';
import 'concurrent_users.eol';

wizard InferPerformanceAnnotations {
  title : 'Infer performance annotations'
  do {
    transaction {
      for (start in ActivityStart.all) {
        var global_limit = start.activity.annotation.secsTimeLimit;
        if (not annotateTimeLimits(global_limit, start)
            or not annotateConcurrentUsers(start)) {
          abort;
          return;
        }
      }
    } -- transaction
  }
}

wizard InferTimeLimitsNew {
  title : 'Infer time limits (new algorithm)'
  do {
    transaction {
      for (activity in ServiceActivity.all) {
        var ends = activity.nodes.select(e|e.isKindOf(ActivityFinish));
        if (not distributeTime(activity.annotation.secsTimeLimit, ends)) {
          abort;
          return;
        }
      }
    } -- transaction
  } -- do
}

wizard RemoveAllInferredAnnotations {
  title : 'Remove all inferred annotations'
  do {
    for (constraint in ActionPerformanceAnnotation.all.select(r|not r.manuallyAdded)) {
      delete constraint;
    }
  }
}
