import "common.eol";

$with Map {"" = "handleOrder"}
$with Map {"" = "minimal"}
$with Map {"" = "sequence"}
$with Map {"" = "sequence-w_auto_constraint"}
$with Map {"" = "single-dipole"}
$with Map {"" = "single-node"}
@test
operation withInteger() {
	assertOldAndNewResultsAreEqual(1, true);
}

$with Map {"" = "handleOrder"}
$with Map {"" = "minimal"}
$with Map {"" = "sequence"}
$with Map {"" = "sequence-w_auto_constraint"}
$with Map {"" = "single-dipole"}
$with Map {"" = "single-node"}
@test
operation withReal() {
	assertOldAndNewResultsAreEqual(1.0, true);
}

$with Map {"" = "sequence"}
@test
operation notEnoughTime() {
	assertOldAndNewResultsAreEqual(0.2, false);
}

$with Map {"" = "sequence"}
@test
operation allTimeUsed() {
	assertOldAndNewResultsAreEqual(0.3, false);
}

$with Map {"" = "dense"}
@test
operation denseDAG() {
	assertOldAndNewResultsAreEqual(20, true);
}

$with Map {"" = "two-dipoles"}
$with Map {"" = "two-dipoles-Aneeds40"}
@test
operation twoDipoles() {
	assertOldAndNewResultsAreEqual(100, true);
}
