<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:mc="http://serviceAnalyzer/messageCatalog"
        targetNamespace="http://serviceAnalyzer/messageCatalog"
        elementFormDefault="qualified">

    <!-- Al menos un servicio -->
    <xs:element name="services">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="service" type="mc:typeService" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Al menos un puerto -->
    <xs:complexType name="typeService">
        <xs:sequence>
            <xs:element name="port" type="mc:typePort" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="uri" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- Cero o mÃ¡s operaciones -->
    <xs:complexType name="typePort">
        <xs:sequence>
            <xs:element name="operation" type="mc:typeOperation" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="address" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="typeOperation">
        <xs:sequence>
            <xs:element name="input" type="mc:typeInput" minOccurs="0" maxOccurs="1"/>
            <xs:element name="output" type="mc:typeOutput" minOccurs="0" maxOccurs="1"/>
            <xs:element name="fault" type="mc:typeFault" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:group name="messageGroup">
        <xs:sequence>
            <xs:element name="decls" type="mc:typeDecls"/>
            <xs:element name="template" type="mc:typeTemplate"/>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="typeInput">
        <xs:group ref="mc:messageGroup"/>
    </xs:complexType>

    <xs:complexType name="typeOutput">
        <xs:group ref="mc:messageGroup"/>
    </xs:complexType>

    <xs:complexType name="typeFault">
        <xs:group ref="mc:messageGroup"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="typeDecls">
        <xs:sequence>
            <xs:element name="typedef" type="mc:typeTypedef" minOccurs="0" maxOccurs="unbounded"/>
            <!-- revisar -->
            <xs:element name="variable" type="mc:typeVariable" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="typeTemplate">
        <xs:simpleContent>
            <xs:extension base="xs:string"/>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="typeGA">
        <xs:restriction base="xs:string">
            <xs:enumeration value="string"/>
            <xs:enumeration value="int"/>
            <xs:enumeration value="float"/>
            <xs:enumeration value="list"/>
            <xs:enumeration value="tuple"/>
            <xs:enumeration value="date"/>
            <xs:enumeration value="dateTime"/>
            <xs:enumeration value="time"/>
            <xs:enumeration value="duration"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="typeTypedef">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="type" type="mc:typeGA" use="required"/>
        <xs:attribute name="element" type="xs:string"/>
        <xs:attribute name="min" type="xs:string"/>
        <xs:attribute name="max" type="xs:string"/>
        <xs:attribute name="values" type="xs:string"/>
        <xs:attribute name="pattern" type="xs:string"/>
        <xs:attribute name="fractionDigits" type="xs:nonNegativeInteger"/>
        <xs:attribute name="totalDigits" type="xs:positiveInteger"/>
    </xs:complexType>

    <xs:complexType name="typeVariable">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="type" type="xs:string" use="required"/>
    </xs:complexType>

</xs:schema>
