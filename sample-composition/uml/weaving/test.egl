[%
import 'platform:/plugin/es.uca.modeling.eol.marte/eol/model_utils.eol';
import 'platform:/plugin/es.uca.modeling.eol.marte/eol/utils.eol';

-- TODO: enforce that the test uses the JUnit 4 default runner (according to ContiPerf docs)

for (link in Weaving!PerformanceRequirementLink.all) {
  var method := link.testMethod;
  var timeLimit := link.execNode.getTimeLimit();
  var throughput := link.execNode.getThroughput();
 %]
package [%=method.packageName()%];

import org.databene.contiperf.junit.ContiPerfSuiteRunner;

/**
 * Performance test suite generated from test method '[%=method.name%]'
 * and executable node '[%=link.execNode.name%]'. Time limit is [%=timeLimit%]
 * seconds and throughput is [%=throughput%] requests per second.
 */
@RunWith(ContiPerfSuiteRunner.class)
@PerfTest(invocations = 100, threads=[%=throughput%])
@Required(max = [%=(timeLimit * 1000).asInteger()%])
public class [%=link.execNode.className()%]PerformanceTest {

}
[% }
operation ExecutableNode className() {
  return self.name.replace('\\s', '');
}

operation MethodDeclaration packageName() {
  var packages := Sequence {};
  var current := self.abstractTypeDeclaration.package;
  while (current.isDefined()) {
    packages.add(current.name);
    current := current.package;
  }
  return packages.invert.concat(".");
}

%]
